image: python:latest

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pypoetry"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  SRC_DIR: "$CI_PROJECT_DIR/latexbuddy"
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache"

cache:
  - key:
      files:
        - pyproject.toml
        - poetry.lock
    paths:
      - ${PIP_CACHE_DIR}
      - ${POETRY_CACHE_DIR}
  - key:
      files:
        - .pre-commit-config.yaml
    paths:
      - ${PRE_COMMIT_HOME}

stages:
  - Lint
  - Smoke Test
  - Build
  - Publish

.pre-commit: &pre-commit-base
  stage: Lint
  before_script:
    - pip install pre-commit

pre-commit-on-merge:
  <<: *pre-commit-base
  script:
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - pre-commit run --from-ref origin/"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" --to-ref "$CI_COMMIT_SHA"
  only:
    - merge_requests

pre-commit-all-files:
  <<: *pre-commit-base
  script:
    - pre-commit run --all-files
  only:
    - master

.smoke: &smoke_base
  stage: Smoke Test
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry run latexbuddy --help
  only:
    - master
    - merge_requests

smoke-py37:
  <<: *smoke_base
  image: python:3.7

smoke-py311:
  <<: *smoke_base
  image: python:3.11

build:
  stage: Build
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 1 week
  only:
    - tags

publish:
  stage: Publish
  before_script:
    - pip install poetry
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  script:
    - poetry publish --repository gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN}
  only:
    - tags
  dependencies:
    - build
