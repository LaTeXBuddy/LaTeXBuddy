image: python:alpine

variables:
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache"
  PIP_CACHE_DIR: "$XDG_CACHE_HOME/pip"
  PRE_COMMIT_HOME: "$XDG_CACHE_HOME/pre-commit"

cache: &global_cache
  key: v1-pip
  paths:
    - ${PIP_CACHE_DIR}

stages:
  - Lint
  - Test
  - Build
  - Publish

default:
  before_script: &setup
    - apk add git
    - python --version --version

pre-commit: &pre-commit
  stage: Lint
  cache:
    - key: v1-pip
      paths:
        - ${PIP_CACHE_DIR}
    - key:
        files:
          - .pre-commit-config.yaml
      paths:
        - ${PRE_COMMIT_HOME}

  before_script:
    - apk add git nodejs
    - python --version --version
    - pip install pre-commit
  script:
    - pre-commit run --all-files
  only:
    - master

pre-commit-changed:
  <<: *pre-commit
  script:
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - pre-commit run --from-ref origin/"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" --to-ref "$CI_COMMIT_SHA"
  only:
    - merge_requests

smoke:
  cache:
    <<: *global_cache
    key: v1-pip-3.7
  image: python:3.7-alpine
  stage: Test
  before_script:
    - *setup
    - pip install .
  script:
    - latexbuddy --help
  only:
    - master
    - merge_requests

pytest:
  cache:
    <<: *global_cache
    key: v1-pip-$PYTHON_VERSION
  parallel:
    matrix:
      - PYTHON_VERSION: "3.7"
        IMAGE_TAG: "3-7"
      - PYTHON_VERSION: "3.8"
        IMAGE_TAG: "3-8"
      - PYTHON_VERSION: "3.9"
        IMAGE_TAG: "3-9"
      - PYTHON_VERSION: "3.10"
        IMAGE_TAG: "3-10"
      - PYTHON_VERSION: "3.11"
        IMAGE_TAG: "3-11"
  image: $CI_REGISTRY/latexbuddy/ci-docker-image:$IMAGE_TAG
  stage: Test
  needs:
    - smoke
  before_script:
    - python --version --version
    - pip install . tox virtualenv
  script:
    - tox run --skip-missing-interpreters
  only:
    - master
    - merge_requests
  artifacts:
    when: always
    paths:
      - pytest-junit.xml
    reports:
      junit: pytest-junit.xml

build:
  stage: Build
  cache: {}
  before_script:
    - *setup
    - pip install --upgrade build
  script:
    - python3 -m build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 1 week
  only:
    - tags

publish:
  stage: Publish
  cache: {}
  needs:
    - build
  before_script:
    - *setup
    - pip install --upgrade twine
  script:
    - python3 -m twine upload
  only:
    - tags
  dependencies:
    - build
